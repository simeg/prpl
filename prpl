#!/usr/bin/env python3

import sys

from src.evaluator import eval
from src.my_parser import parse

Symbol = str
List = list
Number = (int, float)


def repl():
    '''An interactive Read-Evaluate-Print Loop that takes in prpl code
    from a prompt and evaluates it'''
    quit_commands = ['exit', 'quit', 'q']
    print('Welcome to prpl!')
    print('To exit the interpreter, type "' + '" or "'.join(quit_commands) +
          '".')
    prompt = 'prpl> '
    while True:
        command = input(prompt)
        if command == '':
            continue
        if command in quit_commands:
            print('Goodbye!')
            return
        val = eval(parse(command))
        if val is not None:
            print(prplfy(val))


def prplfy(exp):
    'Convert a Python object back into a readable string.'
    if isinstance(exp, List):
        return '(' + ' '.join(map(prplfy, exp)) + ')'
    else:
        return str(exp)


if __name__ == "__main__":
    if len(sys.argv) == 1:
        repl()
    elif len(sys.argv) == 2:
        program = sys.argv[1]
        if program.endswith('.prpl'):
            with open(program, 'r') as f:
                program = f.read()
        print(prplfy(eval(parse(program))))
    else:
        print('TODO: Instructions on how to use prpl, since the user has ' +
              'used it incorrectly')
